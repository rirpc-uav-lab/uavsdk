@startuml

interface  "IDataObserverPlaceholder" as IDOP
interface "IDataCollectorPlaceholder" as IDCP

interface "IDataObserver<SubjectType>" as IDO
IDO : +{abstract} virtual void be_notified(std::shared_ptr<SubjectType> input_data) = 0

IDOP <|-- IDO

class "DataObserverWithCallback<SubjectType>" as DOWC
DOWC : +DataObserverWithCallback(std::function<void(std::shared_ptr<SubjectType>)> callback)
DOWC : +void be_notified(std::shared_ptr<SubjectType> input_data) override
DOWC : -void set_callback(std::function<void(std::shared_ptr<SubjectType>)> callback)
DOWC : -void callback(std::shared_ptr<SubjectType> msg)
DOWC : -std::function<ret=<void>, args=<std::shared_ptr<SubjectType>>> callback_obj
DOWC : -bool callback_set=false

IDO <|-- DOWC

interface "IDataCollector<SubjectType>" as IDC

IDC : +{abstract} virtual void update_data(std::shared_ptr<SubjectType> data) = 0
IDC : +{abstract} virtual void attach_observer(std::shared_ptr<IDataObserver<SubjectType>> observer) = 0
IDC : #{abstract} virtual void notify_observers() = 0

IDCP <|-- IDC


interface "IDataDependencyManager" as IDDM
IDDM : #

@enduml